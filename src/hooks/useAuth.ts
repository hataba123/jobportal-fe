// üìÅ src/hooks/useAuth.ts
"use client";
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { getUser, loginUser, logoutUser } from "@/lib/api/auth";
import type { User } from "@/types/user";
import type { LoginCredentials } from "@/types/auth";

export function useAuth() {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  // Khi component mount, ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  useEffect(() => {
    getUser()
      .then(setUser)
      .catch(() => setUser(null)) // ƒë·∫£m b·∫£o n·∫øu getUser th·∫•t b·∫°i th√¨ c≈©ng x·ª≠ l√Ω ƒë√∫ng
      .finally(() => setLoading(false));
  }, []);

  /**
   * H√†m x·ª≠ l√Ω ƒëƒÉng nh·∫≠p
   * @param credentials - email v√† password c·ªßa ng∆∞·ªùi d√πng
   */
  const login = async (credentials: LoginCredentials) => {
    try {
      const loggedInUser = await loginUser(credentials);
      setUser(loggedInUser); // C·∫≠p nh·∫≠t state user v·ªõi th√¥ng tin ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p
      //       Hi·ªÉn th·ªã t√™n ng∆∞·ªùi d√πng

      // B·∫£o v·ªá route

      // S·ª≠ d·ª•ng token cho c√°c request sau
      console.log("ƒêƒÉng nh·∫≠p th√†nh c√¥ng:", loggedInUser);
      router.push("/");
    } catch (err) {
      console.error("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i:", err);
      throw err; // cho ph√©p UI x·ª≠ l√Ω l·ªói n·∫øu c·∫ßn
    }
  };

  /**
   * H√†m x·ª≠ l√Ω ƒëƒÉng xu·∫•t
   */
  const logout = async () => {
    await logoutUser();
    setUser(null);
    router.push("/login");
  };

  return {
    user,
    login,
    logout,
    loading,
    isAuthenticated: !!user,
  };
}
